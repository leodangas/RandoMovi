{"version":3,"sources":["components/FiltersGenresProvider.js","components/FiltersOtherProvider.js","components/FiltersProvider.js","components/GenresProvider.js","components/Navbar/FiltersGenres.js","components/Navbar/FiltersOther.js","components/Navbar/Filters.js","components/Movie/FetchingMovie.js","components/Navbar/Navbar.js","components/Home/Home.js","components/Movie/Movie.js","components/Movie/MovieFunctions.js","App.js","index.js"],"names":["FiltersGenresContext","createContext","FiltersGenresProvider","props","useState","id","active","filtersGenres","setFiltersGenres","Provider","value","children","FiltersOtherContext","FiltersOtherProvider","releasedFrom","releasedTo","ratedOver","votesOver","filtersOther","setFiltersOther","FiltersContext","FiltersProvider","genres","totalPages","visitedPages","totalResults","visitedResults","totalPageResults","visitedPageResults","filters","setFilters","GenresContext","GenresProvider","name","setGenres","FiltersGenres","activeGenreIndication","setActiveGenreIndication","activeGenre","setActiveGenre","useContext","useEffect","savedGenres","JSON","parse","localStorage","getItem","currentGenre","find","item","genreId","className","onClick","setItem","stringify","toggleGenre","map","genreName","FiltersOther","setStoredData","show","setShow","userStoredData","onChange","event","target","type","Filters","transition","useTransition","from","opacity","enter","config","duration","selectAllGenres","selectGenres","deSelectAllGenres","saveChanges","Number","alert","isNaN","setModal","style","div","FetchingMovie","setFindMovie","history","useHistory","APIKey","rollNumber","randomNumber","Math","floor","random","includes","rollPageNumber","storedGenres","storedFilters","filter","length","join","axios","get","then","res","data","total_pages","randomPage","total_results","totalMovies","results","randomMovie","page","push","pageVisited","anotherMovie","visitedPageResult","mainFunction","Navbar","showFilters","setShowFilters","findMovie","src","alt","Home","Movie","overviewTrailer","setOverviewTrailer","setActive","active2","setActive2","movie","setMovie","crew","setCrew","trailerUrl","setTrailerUrl","showMovie","setShowMovie","params","useParams","movieId","movieRuntime","title","rating","vote_average","release","release_date","poster","poster_path","runtime","description","overview","cast","slice","director","job","movieDirector","undefined","trailerMovie","key","substring","width","height","frameBorder","allow","App","path","exact","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ded7fef8.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nexport const FiltersGenresContext = createContext();\r\n\r\nexport const FiltersGenresProvider = props => {\r\n    const [filtersGenres, setFiltersGenres] = useState([\r\n        {id: 28, active: false},\r\n        {id: 12, active: false},\r\n        {id: 16, active: false},\r\n        {id: 35, active: false},\r\n        {id: 80, active: false},\r\n        {id: 99, active: false},\r\n        {id: 18, active: false},\r\n        {id: 10751, active: false},\r\n        {id: 14, active: false},\r\n        {id: 36, active: false},\r\n        {id: 27, active: false},\r\n        {id: 10402, active: false},\r\n        {id: 9648, active: false},\r\n        {id: 10749, active: false},\r\n        {id: 878, active: false},\r\n        {id: 53, active: false},\r\n        {id: 10752, active: false},\r\n        {id: 37, active: false},\r\n    ])\r\n    return (\r\n        <FiltersGenresContext.Provider value={[filtersGenres, setFiltersGenres]}>\r\n            {props.children}\r\n        </FiltersGenresContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from 'react'\r\n\r\nexport const FiltersOtherContext = createContext();\r\n\r\nexport const FiltersOtherProvider = props => {\r\n    const [filtersOther, setFiltersOther] = useState({\r\n        releasedFrom: '1900',\r\n        releasedTo: '2021',\r\n        ratedOver: '',\r\n        votesOver: '450',\r\n    })\r\n    return (\r\n        <FiltersOtherContext.Provider value={[filtersOther, setFiltersOther]}>\r\n            {props.children}\r\n        </FiltersOtherContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from 'react'\r\n\r\nexport const FiltersContext = createContext();\r\n\r\nexport const FiltersProvider = props => {\r\n    const [filters, setFilters] = useState({\r\n        genres: '',\r\n        releasedFrom: '1900',\r\n        releasedTo: '2021',\r\n        ratedOver: '',\r\n        votesOver: '450',\r\n        totalPages: '',\r\n        visitedPages: '',\r\n        totalResults: '',\r\n        visitedResults: '',\r\n        totalPageResults: '',\r\n        visitedPageResults: '',\r\n    })\r\n    return (\r\n        <FiltersContext.Provider value={[filters, setFilters]}>\r\n            {props.children}\r\n        </FiltersContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\nexport const GenresContext = createContext();\r\n\r\nexport const GenresProvider = (props) => {\r\n  const [genres, setGenres] = useState([\r\n    {\r\n      id: 28,\r\n      name: \"Action\",\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Adventure\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"Animation\",\r\n    },\r\n    {\r\n      id: 35,\r\n      name: \"Comedy\",\r\n    },\r\n    {\r\n      id: 80,\r\n      name: \"Crime\",\r\n    },\r\n    {\r\n      id: 99,\r\n      name: \"Documentary\",\r\n    },\r\n    {\r\n      id: 18,\r\n      name: \"Drama\",\r\n    },\r\n    {\r\n      id: 10751,\r\n      name: \"Family\",\r\n    },\r\n    {\r\n      id: 14,\r\n      name: \"Fantasy\",\r\n    },\r\n    {\r\n      id: 36,\r\n      name: \"History\",\r\n    },\r\n    {\r\n      id: 27,\r\n      name: \"Horror\",\r\n    },\r\n    {\r\n      id: 10402,\r\n      name: \"Music\",\r\n    },\r\n    {\r\n      id: 9648,\r\n      name: \"Mystery\",\r\n    },\r\n    {\r\n      id: 10749,\r\n      name: \"Romance\",\r\n    },\r\n    {\r\n      id: 878,\r\n      name: \"Sci-Fi\",\r\n    },\r\n    {\r\n      id: 53,\r\n      name: \"Thriller\",\r\n    },\r\n    {\r\n      id: 10752,\r\n      name: \"War\",\r\n    },\r\n    {\r\n      id: 37,\r\n      name: \"Western\",\r\n    },\r\n  ]);\r\n  return (\r\n      <GenresContext.Provider value={[genres, setGenres]}>\r\n          {props.children}\r\n      </GenresContext.Provider>\r\n  )\r\n};\r\n","import React, { useContext, useEffect, useState} from \"react\";\r\nimport { FiltersGenresContext } from \"../FiltersGenresProvider\";\r\n\r\nconst FiltersGenres = (props) => {\r\n  const [activeGenreIndication, setActiveGenreIndication] = useState(\"+\");\r\n  const [activeGenre, setActiveGenre] = useState(\"\");\r\n  const [filtersGenres, setFiltersGenres] = useContext(FiltersGenresContext);\r\n\r\n  useEffect(() => {\r\n    let savedGenres = JSON.parse(localStorage.getItem(\"filters\"));\r\n    if(savedGenres !== null) setFiltersGenres(savedGenres);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let currentGenre = filtersGenres.find((item) => {return item.id === props.genreId && item.active === true})\r\n    if(currentGenre) {\r\n      setActiveGenre('active-genre')\r\n      setActiveGenreIndication('✓')\r\n    }\r\n    if(!currentGenre) {\r\n      setActiveGenre('')\r\n      setActiveGenreIndication('+')\r\n    }\r\n  }, [filtersGenres, props.genreId])\r\n  \r\n  const modifySelection = () => {\r\n    let savedGenres = JSON.parse(localStorage.getItem(\"filters\"));\r\n    if (savedGenres === null) {\r\n      localStorage.setItem(\"filters\", JSON.stringify(filtersGenres));\r\n    }\r\n    const toggleGenre = filtersGenres.map(item => {\r\n      return item.id === props.genreId ? {...item, active: !item.active} : item\r\n    })\r\n    setFiltersGenres(toggleGenre);\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={`genre-button ${activeGenre}`} onClick={modifySelection}>\r\n      <h1>{activeGenreIndication}</h1>\r\n      <h1>{props.genreName}</h1>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default FiltersGenres;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FiltersOtherContext } from \"../FiltersOtherProvider\";\r\n\r\nconst FiltersOther = (props) => {\r\n  const [filtersOther, setFiltersOther] = useContext(FiltersOtherContext);\r\n  const [, setStoredData] = useState({});\r\n  const [show, setShow] = useState(false);\r\n  const setReleasedFrom = (event) => {\r\n    setFiltersOther({ ...filtersOther, releasedFrom: event.target.value });\r\n  };\r\n\r\n  const setReleasedTo = (event) => {\r\n    setFiltersOther({ ...filtersOther, releasedTo: event.target.value });\r\n  };\r\n\r\n  const setRatedOver = (event) => {\r\n    setFiltersOther({ ...filtersOther, ratedOver: event.target.value });\r\n  };\r\n\r\n  const setVotesOver = (event) => {\r\n    setFiltersOther({ ...filtersOther, votesOver: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let userStoredData = JSON.parse(localStorage.getItem(\"filtersOther\"));\r\n    if (userStoredData === null) {\r\n      localStorage.setItem(\"filtersOther\", JSON.stringify(filtersOther));\r\n      setShow(true)\r\n    }\r\n    else {\r\n      setStoredData(userStoredData);\r\n      setFiltersOther(userStoredData);\r\n      setShow(true);\r\n    }\r\n    \r\n  }, []);\r\n  return (\r\n    <>\r\n      {show ? (\r\n        <>\r\n          {\" \"}\r\n          <h1>Other</h1>\r\n          <h2>Release date (1900-2021)</h2>\r\n          <div className=\"release-date\">\r\n            <input value={filtersOther.releasedFrom} onChange={setReleasedFrom} type=\"text\"></input>\r\n            <input value={filtersOther.releasedTo} onChange={setReleasedTo} type=\"text\"></input>\r\n          </div>\r\n          <div className=\"other-filters\">\r\n            <div className=\"filters-rating-votes\">\r\n              <h2>Movie rating</h2>\r\n              <select onChange={setRatedOver} value={filtersOther.ratedOver}>\r\n                <option value=\"0\">Ignore this filter</option>\r\n                <option value=\"8\">Rated over 8</option>\r\n                <option value=\"7.5\">Rated over 7.5</option>\r\n                <option value=\"7\">Rated over 7</option>\r\n                <option value=\"6.5\">Rated over 6.5</option>\r\n                <option value=\"6\">Rated over 6</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <h2>Total Votes</h2>\r\n              <select onChange={setVotesOver} value={filtersOther.votesOver}>\r\n                <option value=\"0\">Ignore this filter</option>\r\n                <option value=\"4000\">Votes over 100000</option>\r\n                <option value=\"1500\">Votes over 50000</option>\r\n                <option value=\"450\">Votes over 10000</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FiltersOther;\r\n","import React, { useContext} from \"react\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport { FiltersGenresContext } from \"../FiltersGenresProvider\";\r\nimport { FiltersOtherContext } from \"../FiltersOtherProvider\";\r\nimport { FiltersContext } from \"../FiltersProvider\";\r\nimport { GenresContext } from \"../GenresProvider\";\r\nimport FiltersGenres from \"./FiltersGenres\";\r\nimport FiltersOther from \"./FiltersOther\";\r\nimport \"./styles/Filters.css\";\r\nconst Filters = (props) => {\r\n  const [genres,] = useContext(GenresContext);\r\n  const [, setFilters] = useContext(FiltersContext);\r\n  const [filtersGenres, setFiltersGenres] = useContext(FiltersGenresContext);\r\n  const [filtersOther,] = useContext(FiltersOtherContext);\r\n\r\n  //Defining transition for modal's appearance\r\n  const transition = useTransition(props.show, {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    config: { duration: 500 },\r\n  });\r\n\r\n  const selectAllGenres = () => {\r\n    const selectGenres = filtersGenres.map((item) => {return {id: item.id, active: true}})\r\n    setFiltersGenres(selectGenres);\r\n  }\r\n  const deSelectAllGenres = () => {\r\n    const selectGenres = filtersGenres.map((item) => {return {id: item.id, active: false}})\r\n    setFiltersGenres(selectGenres);\r\n  }\r\n  const saveChanges = () => {\r\n    if(Number(filtersOther.releasedFrom < 1900 || filtersOther.releasedFrom > 2021)) alert('Release date FROM must be greater than 1900 and lower than 2021');\r\n    else if(Number(filtersOther.releasedTo < 1900 || filtersOther.releasedTo > 2021)) alert('Release date TO must be greater than 1900 and lower than 2021');\r\n    else if(Number(filtersOther.releasedFrom) > Number(filtersOther.releasedTo)) alert('Release date FROM must be lower than release date TO');\r\n    else if(isNaN(filtersOther.releasedFrom) || isNaN(filtersOther.releasedTo)) alert('Only write numbers in the date');\r\n    else {\r\n      setFilters({genres: filtersGenres, releasedFrom: filtersOther.releasedFrom, releasedTo: filtersOther.releasedTo, ratedOver: filtersOther.ratedOver, votesOver: filtersOther.votesOver, totalPages: '', totalResults: '', visitedPages: '', visitedPageResults: ''})\r\n      localStorage.setItem('filtersOther', JSON.stringify(filtersOther))\r\n      localStorage.setItem('filters', JSON.stringify(filtersGenres));\r\n      props.setModal(false);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"filters-bg\">\r\n      {transition((style, item) =>\r\n        item ? (\r\n          <animated.div className=\"filters-container\" style={style}>\r\n            <div className=\"filters-header\">\r\n              <h1>FILTERS</h1>\r\n              <h2 onClick={() => props.setModal(false)}>✕</h2>\r\n            </div>\r\n            <div className=\"filters-sections\">\r\n              <div className=\"filters-genres\">\r\n                <h1>Genres</h1>\r\n                <div className=\"genres\">\r\n                  {genres.map((item) => {\r\n                    return (\r\n                      <FiltersGenres genreName={item.name} genreId={item.id} key={item.id}/>\r\n                  )})}\r\n                  <button className=\"select-all-button\" onClick={selectAllGenres}>Select All</button>\r\n                  <button className=\"clear-button\" onClick={deSelectAllGenres}>Clear All</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"filters-other\">\r\n                <FiltersOther/>\r\n                <button className=\"save-changes\" onClick={saveChanges}>Save Changes</button>\r\n              </div>\r\n            </div>\r\n          </animated.div>\r\n        ) : (\r\n          \"\"\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import { useContext, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { FiltersContext } from \"../FiltersProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst FetchingMovie = ({ setFindMovie }) => {\r\n  const [filters, setFilters] = useContext(FiltersContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const APIKey = \"c6e79d5ff2e278a41f6e542761573cc5\";\r\n\r\n    const rollNumber = () => {\r\n        let randomNumber = Math.floor(Math.random() * filters.totalPageResults)\r\n        if(filters.visitedPageResults.includes(randomNumber)) return rollNumber()\r\n        else {\r\n            return randomNumber\r\n        };\r\n    }\r\n    const rollPageNumber = () => {\r\n        let randomNumber = Math.floor(Math.random() * filters.totalPages) + 1;\r\n        if(filters.visitedPages.includes(randomNumber)) return rollPageNumber()\r\n        else {\r\n            return randomNumber\r\n        }\r\n    }\r\n    const mainFunction = () => {\r\n        setFindMovie(false);\r\n        let storedGenres = JSON.parse(localStorage.getItem('filters'))\r\n        let storedFilters = JSON.parse(localStorage.getItem('filtersOther'))\r\n        if(storedGenres === null) storedGenres = '';\r\n        if(storedFilters === null) storedFilters = filters;\r\n        else {\r\n            storedGenres = storedGenres.filter(item => {return item.active === true})\r\n            storedGenres = storedGenres.map((item) => {return item.id})\r\n            if(storedGenres.length === 0) storedGenres = '';\r\n            else {\r\n                storedGenres = storedGenres.join('|');\r\n            }\r\n        }\r\n        if(filters.visitedPages === '') {\r\n            axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${APIKey}&include_video=false&primary_release_date.gte=${storedFilters.releasedFrom}-01-01&primary_release_date.lte=${storedFilters.releasedTo}-12-31&vote_count.gte=${Number(storedFilters.votesOver)}&vote_average.gte=${Number(storedFilters.ratedOver)}&with_genres=${storedGenres}`)\r\n            .then(res => {\r\n                let totalPages = res.data.total_pages;\r\n                let randomPage = Math.floor(Math.random() * totalPages) + 1\r\n                if(res.data.total_results === 0) {\r\n                    return 'No movies';\r\n                }\r\n                else {\r\n                    return axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${APIKey}&include_video=false&primary_release_date.gte=${storedFilters.releasedFrom}-01-01&primary_release_date.lte=${storedFilters.releasedTo}-12-31&vote_count.gte=${Number(storedFilters.votesOver)}&vote_average.gte=${Number(storedFilters.ratedOver)}&with_genres=${storedGenres}&page=${randomPage}`)\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(res === 'No movies') alert('No movies were found with these filters')\r\n                else {\r\n                    let totalMovies = res.data.results.length;\r\n                    let randomMovie = Math.floor(Math.random() * res.data.results.length)\r\n                    setFilters({...filters, totalPages: res.data.total_pages, totalResults: res.data.total_results, visitedPages: [res.data.page], totalPageResults: totalMovies, visitedPageResults: [randomMovie], visitedResults: 1})\r\n                    history.push(`/movie/${res.data.results[randomMovie].id}`)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            if(filters.totalResults === filters.visitedResults) {\r\n                alert('No more movies were found with these filters')\r\n            }\r\n            else if(filters.totalPageResults === filters.visitedPageResults.length){\r\n                let randomPage = rollPageNumber()\r\n                axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${APIKey}&include_video=false&primary_release_date.gte=${storedFilters.releasedFrom}-01-01&primary_release_date.lte=${storedFilters.releasedTo}-12-31&vote_count.gte=${Number(storedFilters.votesOver)}&vote_average.gte=${Number(storedFilters.ratedOver)}&with_genres=${storedGenres}&page=${randomPage}`)\r\n                .then(res => {\r\n                    let totalResults = res.data.results.length;\r\n                    let randomMovie =  Math.floor(Math.random() * totalResults);\r\n                    let pageVisited = filters.visitedPages;\r\n                    pageVisited.push(randomPage);\r\n                    setFilters({...filters, totalPageResults: totalResults, visitedPages: pageVisited, visitedPageResults: [randomMovie], visitedResults: filters.visitedResults+1})\r\n                    history.push(`/movie/${res.data.results[randomMovie].id}`)\r\n                })\r\n            }\r\n            else {\r\n                axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${APIKey}&include_video=false&primary_release_date.gte=${storedFilters.releasedFrom}-01-01&primary_release_date.lte=${storedFilters.releasedTo}-12-31&vote_count.gte=${Number(storedFilters.votesOver)}&vote_average.gte=${Number(storedFilters.ratedOver)}&with_genres=${storedGenres}&page=${filters.visitedPages[filters.visitedPages.length-1]}`)\r\n                .then(res => {\r\n                    let anotherMovie = rollNumber();\r\n                    let visitedPageResult = filters.visitedPageResults;\r\n                    visitedPageResult.push(anotherMovie);\r\n                    setFilters({...filters, visitedPageResults: visitedPageResult, visitedResults: filters.visitedResults+1});\r\n                    history.push(`/movie/${res.data.results[anotherMovie].id}`)\r\n                })\r\n            }\r\n        }\r\n       \r\n    };\r\n    \r\n    mainFunction();\r\n\r\n  });\r\n  return null;\r\n};\r\n\r\nexport default FetchingMovie;\r\n","import React, { useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Filters from \"./Filters\";\r\nimport FetchingMovie from \"../Movie/FetchingMovie\";\r\nimport \"./styles/Navbar.css\";\r\nconst Navbar = () => {\r\n    const [showFilters, setShowFilters] = useState(false);\r\n    const [findMovie, setFindMovie] = useState(false);\r\n    const history = useHistory();\r\n  return (\r\n      <>\r\n    <div className=\"navbar-container\">\r\n      <div className=\"navbar-wrapper\">\r\n        <div className=\"navbar-logo\" onClick={()=> history.push('/home')}>\r\n          <img\r\n            src=\"https://vbinnovatives.com/vidvibes_html_v2/assets/icon/favicon/red-theme/apple-touch-icon.png\"\r\n            alt=\"website's logo\"\r\n          ></img>\r\n          <h1 className=\"websites-name\">RandoMovi</h1>\r\n        </div>\r\n        <div className=\"navbar-buttons\">\r\n          <button className=\"filters-button\" onClick={()=> setShowFilters(true)}>Filters</button>\r\n          <button className=\"next-movie-button\" onClick={() => setFindMovie(true)}>Next Movie</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {showFilters ? <Filters show={showFilters} setModal={setShowFilters} /> : ''}\r\n    {findMovie ? <FetchingMovie setFindMovie={setFindMovie}/> : ''}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./styles/Home.css\";\r\nimport FetchingMovie from \"../Movie/FetchingMovie\";\r\nconst Home = () => {\r\n  const [findMovie, setFindMovie] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"home-container\">\r\n        <Navbar />\r\n        <div className=\"home-wrapper\">\r\n          <h1>RANDOMOVI</h1>\r\n          <h2>SUGGEST ME A RANDOM MOVIE TO WATCH</h2>\r\n          <h3>\r\n            RandoMovi is a website made for those, who can't choose which movie\r\n            to watch on a lovely evening, we provide you an engine, which\r\n            suggests you a random movie according to your chosen criteria!\r\n          </h3>\r\n          <button onClick={() => setFindMovie(true)}>SUGGEST ME A MOVIE</button>\r\n        </div>\r\n      </div>\r\n      {findMovie ? <FetchingMovie setFindMovie={setFindMovie}/> : ''}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport React, {useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { movieLength, movieDirector } from \"./MovieFunctions\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./styles/Movie.css\";\r\nconst Movie = () => {\r\n  const [overviewTrailer, setOverviewTrailer] = useState(true);\r\n  const [active, setActive] = useState(\"active\");\r\n  const [active2, setActive2] = useState(\"\");\r\n  const [movie, setMovie] = useState({});\r\n  const [crew, setCrew] = useState({});\r\n  const [trailerUrl, setTrailerUrl] = useState('');\r\n  const [showMovie, setShowMovie] = useState(false);\r\n  const params = useParams();\r\n  const setOverview = () => {\r\n    setOverviewTrailer(true);\r\n    setActive(\"active\");\r\n    setActive2(\"\");\r\n  };\r\n  const setTrailer = () => {\r\n    setOverviewTrailer(false);\r\n    setActive2(\"active\");\r\n    setActive(\"\");\r\n  };\r\n  useEffect(() => {\r\n    const APIKey = \"c6e79d5ff2e278a41f6e542761573cc5\";\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/${params.movieId}?api_key=${APIKey}&language=en-US`\r\n      )\r\n      .then((res) => {\r\n        setMovie({\r\n          name: res.data.title,\r\n          rating: res.data.vote_average,\r\n          release: res.data.release_date,\r\n          poster: res.data.poster_path,\r\n          length: movieLength(res.data.runtime),\r\n          description: res.data.overview,\r\n          genres: res.data.genres\r\n        });\r\n        return axios.get(`https://api.themoviedb.org/3/movie/${params.movieId}/credits?api_key=${APIKey}&language=en-US`)\r\n      }).then(res => {\r\n        let cast = res.data.cast.slice(0, 3);\r\n        cast = cast.map((item) => {return item.name})\r\n        let director = movieDirector(res.data.crew);\r\n        if(director === undefined) director = {name: 'Unknown'}\r\n        setCrew({cast: cast.join(', '), director: director})\r\n        return axios.get(`http://api.themoviedb.org/3/movie/${params.movieId}/videos?api_key=${APIKey}`)\r\n      }).then(res => {\r\n        let trailerMovie = res.data.results;\r\n        trailerMovie = trailerMovie.find((item) => {\r\n          return item.type === \"Trailer\";\r\n        });\r\n        if (trailerMovie){\r\n          setTrailerUrl(trailerMovie.key);\r\n          }\r\n          setShowMovie(true)\r\n      });\r\n  }, [params, setMovie]);\r\n\r\n  return (\r\n    <div className=\"movie-container\">\r\n      <Navbar />\r\n      {showMovie ? (\r\n        <div className=\"movie-wrapper\">\r\n          <div className=\"movie-image\">\r\n            <img src={`https://image.tmdb.org/t/p/w500/${movie.poster}`} alt=\"Movie poster\" />\r\n          </div>\r\n          <div className=\"movie-info\">\r\n            <div className=\"movie-title-rating\">\r\n              <div className=\"movie-title\">\r\n                <h1>{movie.name}</h1>\r\n              </div>\r\n              <div className=\"rating\">\r\n                <h2>{movie.rating}</h2>\r\n                <div className=\"clip-star\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"movie-release-length\">\r\n              <h1>{movie.release.substring(0, 4)}</h1>\r\n              <h1>{movie.length}</h1>\r\n            </div>\r\n            <div className=\"overview-trailer\">\r\n              <h1 onClick={setOverview} className={active}>\r\n                OVERVIEW\r\n              </h1>\r\n              <h1 onClick={setTrailer} className={active2}>\r\n                TRAILER\r\n              </h1>\r\n            </div>\r\n            {overviewTrailer ? (\r\n              <>\r\n                <div className=\"movie-description\">\r\n                  <h1>\r\n                    {movie.description}\r\n                  </h1>\r\n                </div>\r\n                <div>\r\n                  <div className=\"movie-starring\">\r\n                    <h1>Starring</h1>\r\n                    <h2>{crew.cast}</h2>\r\n                  </div>\r\n                  <div className=\"movie-starring\">\r\n                    <h1>Created by</h1>\r\n                    <h2>{crew.director.name}</h2>\r\n                  </div>\r\n                  <div className=\"movie-starring\">\r\n                    <h1>Genre</h1>\r\n                    <div className=\"genres\">\r\n                      {movie.genres.map((item) => {\r\n                        return <h2 key={item.id}>{item.name}</h2>\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"movie-trailer\">\r\n                <iframe\r\n                  width=\"560\"\r\n                  height=\"300\"\r\n                  src={`https://www.youtube.com/embed/${trailerUrl}`}\r\n                  title=\"YouTube video player\"\r\n                  frameBorder=\"0\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allow=\"fullscreen\"\r\n                ></iframe>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Movie;\r\n","export function movieLength(movieRuntime) {\r\n    let hours = Math.floor(movieRuntime / 60);\r\n    let minutes = movieRuntime % 60;\r\n    return hours + \" h \" + minutes + \"min\";\r\n}\r\n\r\nexport function movieDirector(crew) {\r\n    const movieDirector = crew.find((item) => {\r\n        return item.job === \"Director\"\r\n    })\r\n    return movieDirector\r\n}","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Movie from \"./components/Movie/Movie\";\nimport { FiltersProvider } from \"./components/FiltersProvider\";\nimport { GenresProvider } from \"./components/GenresProvider\";\nimport { FiltersGenresProvider } from \"./components/FiltersGenresProvider\";\nimport { FiltersOtherProvider } from \"./components/FiltersOtherProvider\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <FiltersProvider>\n          <GenresProvider>\n            <FiltersGenresProvider>\n              <FiltersOtherProvider>\n                <Route path=\"/\" exact>\n                  <Redirect to=\"/home\" />\n                </Route>\n                <Route path=\"/home\">\n                  <Home />\n                </Route>\n                <Route path=\"/movie/:movieId\">\n                  <Movie />\n                </Route>\n              </FiltersOtherProvider>\n            </FiltersGenresProvider>\n          </GenresProvider>\n        </FiltersProvider>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}